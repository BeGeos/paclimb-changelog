---
import type { MarkdownInstance } from 'astro';

import LogEntryLayout from '@layouts/LogEntryLayout.astro';

// Utils
const getDate = (date: string = '', locale: string = 'it') => {
  return new Date(Date.parse(date)).toLocaleDateString(locale);
};

const getLog = async (
  slug: string,
  logs: MarkdownInstance<Record<string, any>>[]
) => {
  return logs.filter((l) => l.frontmatter.slug === slug)[0];
};

//@ts-ignore
const { lang, slug } = Astro.params;

let logs;

switch (lang) {
  case 'it':
    logs = await Astro.glob('../../../logs/it/*.md');
    break;
  default:
    logs = await Astro.glob('../../../logs/en/*.md');
}

//@ts-ignore
const log = await getLog(slug, logs);

const { title, link, author, slug: _slug } = log.frontmatter;
const { Content } = log;
const date = getDate(_slug, lang);
---

<LogEntryLayout lang={lang} title={title}>
  <header class="flex text-xs gap-1">
    <p class="opacity-40">{date} by</p>
    <a href={link} target="_blank" rel="noopener noreferrer">{author}</a>
  </header>
  <Content />
</LogEntryLayout>
